on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:  

defaults:
  run:
    working-directory: Connect_Open_Wifi_Pub

env:
  fileName: my-artifact    
  DAY_OF_WEEK: Monday
    
name: Upload Release Asset

jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
      # - name: step-1
      #   run: echo "${{ env.fileName }}"
      - name: "Say Hello Mona it's Monday"
        if: ${{ env.DAY_OF_WEEK == 'Monday' }}
        run: echo "$Greeting $First_Name. Today is $DAY_OF_WEEK!"
        env:
          First_Name: Mona          
      # - name: Checkout code
      #  uses: actions/checkout@v2
      # - name: Build project # This would actually build your project, using zip for an example artifact
      #  run: zip -r ../"${{ env.fileName }}".zip .
      # - name: Create GitHub Release
      #  id: create_release
      #  uses: actions/create-release@v1
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #  with:
      #    tag_name: ${{ github.run_number }}
      #    release_name: Release ${{ github.run_number }}
      #    draft: false
      #    prerelease: false
      # - name: List files
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #  run: ls -aux ${{ github.workspace }}/*
      # - name: Upload Release Asset
      #  id: upload-release-asset 
      #  uses: actions/upload-release-asset@v1
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #  with:
      #    upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
      #    asset_path: ${{ github.workspace }}/${{ env.fileName }}.zip
      #    asset_name: ${{ env.fileName }}-v${{ github.run_number }}.zip
      #    asset_content_type: application/zip
